const {dialog} = require('electron').remote;
const {fs} = require('fs');
const {PythonShell} = require('python-shell');
//const {path} = require("path")

let selected_file;

function open_upload_file_dialog() {
    
    list_of_selected_files = dialog.showOpenDialog();
    if (list_of_selected_files !== undefined && list_of_selected_files.length <= 1) {
        
        selected_file = list_of_selected_files[0]
    }
}


function is_valid_author(str) {
    /* Takes a string and returns true if it is a valid author string, otherwise returns false */
    
    //@ needs to deny " and "
    accented_chars = "àèìòùÀÈÌÒÙáéíóúýÁÉÍÓÚÝâêîôûÂÊÎÔÛãñõÃÑÕäëïöüÿÄËÏÖÜŸçÇßØøÅåÆæœ"
    single_name_regex = `[a-z|${accented_chars}|']+[.]?`
    full_name_regex = `${single_name_regex}([ |-]${single_name_regex})*`; //should match any name (in lower case) e.g john clark-smith
    author_regex = new RegExp(`^${full_name_regex}(,[ ]${full_name_regex})*$`, 'i');
    
    console.log(author_regex);
    
    return author_regex.test(str);
}


function is_valid_year(str) {
    /* Takes a string and returns true if it is a valid year string, returns false otherwise */
    
    year_regex = /^[0-9]{4}$/;
    return year_regex.test(str);
}


function is_valid_url(str) {
    /* Takes a string and returns true if it is a valid url string, returns false otherwise */
    
    url_regex = /^(?:http(s)?:\/\/)?[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\(\)\*\+,;=.]+$/;
    return url_regex.test(str);
}


function get_args_from_inputs(selector_string, list_of_inputs) {
    /* Takes a string, and list of inputs (generated by event.target.elements). Returns a list of arguments 
       for the python shell to take as input. */
    
    if (!['RERCI ARTICLE', 'CONGRESS DOCUMENT'].includes(selector_string)) {
        return null;
    }
    
    args = [];
    args.push(list_of_inputs['title'].value); //Title
    
    //Year
    if (!is_valid_year(list_of_inputs['year'].value)) { 
        alert("The year value is not a valid year. Examples of a valid year are:\n2004\n1992\n2020");
        return null;

    } else {
        args.push(list_of_inputs['year'].value);
    }
    
    //Authors
    if (!is_valid_author(list_of_inputs['authors'].value)) { //if the regex fails then it is not a valid author
        alert("The authors value is not valid. Examples of a valid author value are:\nJohn Smith\nJohn Smith, Francis Henderson\nJohn Smith, Francis Henderson, Liz Farmer");
        return null;

    } else {
        args.push(list_of_inputs['authors'].value);
    }
    
    
    if (selector_string === 'RERCI ARTICLE') {
        args.push(list_of_inputs['journal'].value); //Journal
        args.push(list_of_inputs['abstract'].value); //Abstract
        
        //File Upload
        if (selected_file === undefined) {
            alert("You have not selected a file to upload. Please select a file to upload.");
            return null;
        } else {
            args.push(selected_file);
        }
        
    } else if (selector_string === 'CONGRESS DOCUMENT') {    
        //File Upload
        if (selected_file === undefined && !is_valid_url(list_of_inputs['link'].value)) {
            alert("You have not selected a file to upload or provided a correct link. Please select a file to upload or provide a correct link.");
            return null;
        } else {
            selected_file = (is_valid_url(list_of_inputs['link'].value)) ? list_of_inputs['link'].value : selected_file;
            args.push(selected_file);
        }
    }
    
    args.unshift(`${selector_string}`); //put the upload type at the start of the list

    return args;
}


function post_message_to_screen(message, selector_string) {
    /* Takes a message and selector string. The message will be displayed on the form selected by the selector string */
    
    let p_tag;
    if (selector_string === 'RERCI ARTICLE') {
        p_tag = document.getElementById('response-serci');
        
    } else {
        p_tag = document.getElementById('response-congress');
    }   
    
    p_tag.textContent = message;
}


function send_to_python(args, script_filename) {
    /* Takes a list of arguments and the filename of a script in the python_scripts folder. Then sends the arguments to the python script. The 
       response from the python script is printed to the console. */
    
    selector_str = args[0];
    post_message_to_screen("Sending to server...", selector_str);

    let options = {
        scriptPath : './python_scripts/',
        args : args
    }

    let python_shell = new PythonShell(script_filename, options);
    python_shell.on('message', (message) => {post_message_to_screen(message, selector_str)});
}


function process_rerci_form(event) {
    /* When a user submits the RERCI file upload form, this function will be called. It first ensures
       input is in the correct format. Then it sends the user input via python-shell to a python script 
       for further processing. */
    
    event.preventDefault();
    list_of_inputs = event.target.elements;
    args = get_args_from_inputs('RERCI ARTICLE', list_of_inputs);
    
    if (args !== null) {
        send_to_python(args, "upload_file.py");
        event.target.reset()
        selected_file = undefined;
    }
}



function process_congress_form(event) {
    event.preventDefault();
    list_of_inputs = event.target.elements;
    args = get_args_from_inputs('CONGRESS DOCUMENT', list_of_inputs);
    
    if (args !== null) {
        send_to_python(args, "upload_file.py");
        event.target.reset()
        selected_file = undefined;
    }
}


function prevent_file_dialog(event) {
    /* Prevents the default file dialog opening when a user clicks on the upload file button. 
       Calls for the electron file dialog to open.*/
    
    event.preventDefault();
    open_upload_file_dialog();
    
    //if the user selected a file, then update the file selector button's text
    if (selected_file != undefined) {   
        
        //see https://stackoverflow.com/questions/54580161/failed-to-set-the-value-property-on-htmlinputelement-in-reactive-form
        const dataTransfer = new ClipboardEvent('').clipboardData || new DataTransfer();
        dataTransfer.items.add(new File(['my-file'], selected_file));
        event.target.files = dataTransfer.files;
    }
}



//Setting up form even handlers
let rerci_form = document.querySelector('#rerci-article-form');
let congress_form = document.querySelector('#congress-article-form');

rerci_form.addEventListener('submit', process_rerci_form);
congress_form.addEventListener('submit', process_congress_form);

//Preventing default behaviour on file selectors
let rerci_file_button = document.querySelector('#rerci-file-button');
let congress_file_button = document.querySelector('#congress-file-button');

rerci_file_button.addEventListener('click', prevent_file_dialog);
congress_file_button.addEventListener('click', prevent_file_dialog);